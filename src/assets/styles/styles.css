/*
In the deafault CSS box-model (box-sizing: content-box), padding
and border values were added on top of the width and height
of the rendered content box.

When using border-box instead, when we define whe width and height,
it includes everything including border, padding and content box.
*/

/*
Pseudo-elements ::before and ::after were used to insert content
inside a HTML element, before and after the actual content of it.

By declaring ::before and (::after with box-sizing: border-box),
we can ensure that content added by these pseudo selectors were
also calculated in the width and height of an element.
*/

/* 
Pseudo-elements and were used to specify a specific part of an 
element, to insert content, whereby pseudo-classs is to determine a
specific state of an element.
*/

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Define a fallback color for body */
body {
  margin: 0;
  background: #2e97a7;
  background: linear-gradient(to right, #2e97a7, #362fd9);
}

/*
display: grid => transform the element into a grid container, 
can use CSS grid layout to create a complex layout structure
with rows and columns within the container

direct childs of the .calculator-grid becomes grid items automatically
*/
.calculator-grid {
  display: grid;
  margin-top: 2rem;
  /* Create 4 columns, each with the width of 6rem */
  grid-template-columns: repeat(4, 6rem);
  /* 
  Minimum size = 7rem, scale with auto.
  repeat 5 rows, with each has a height of
  6rem.
  */
  grid-template-rows: minmax(7rem, auto) repeat(5, 6rem);
}

/* 
Change span-two buttons into taking up 2 spaces
*/
.span-two {
  grid-column: span 2;
}

/* 
The output screen of the calculator
*/
.output {
  /* Span from first space to the last space */
  grid-column: 1 / -1;
  /* Partial transparent */
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
}
